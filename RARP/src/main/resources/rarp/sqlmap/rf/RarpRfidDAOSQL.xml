<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="RarpRfidDAOSQL">
	<select id="RarpRfidDAO.selectRcvrCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
			<![CDATA[	
				SELECT 
				   COUNT(A.RCVR_EVENT_ID) TOTCNT
				FROM RMCC_LOG_RCVR A, IAMC_INFRA_RESOURCES_VW B
				WHERE A.INFRA_RSC_ID = B.INFRA_RSC_ID
			    AND B.TOP_INFRA_STRUCTURE_SEQ = (SELECT INFRA_STRUCTURE_SEQ FROM IAMC_INFRA_STRUCTURE_VW WHERE RSMO_CD =#RSMO_CD#)
		        AND A.RCVR_YN IS NULL AND A.ROOT_CAUSE_YN ='Y'
		    ]]>
	</select>
	<select id="RarpRfidDAO.selectRcvrList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[	
		SELECT * FROM (     
		SELECT A.*, ROWNUM AS RNUM FROM (
			SELECT 
			   A.ROOT_CAUSE_YN, A.RCVR_YN, TO_CHAR(A.REG_DT, 'yyyy-mm-dd hh24:mi:ss') REG_DT, 
			   A.MOD_DT, A.RCVR_EVENT_ID, A.EVENT_ITEM, 
			   A.INFRA_RSC_ID, A.MON_LOG_ID, A.RCVR_RULE_ID, 
			   A.RCVR_STAT, A.REMARK,
			   B.INFRA_RSC_NM, B.HOST_IP, B.HOST_PORT, B.UI_INFRA_TYPE_NM_KO
			FROM RMCC_LOG_RCVR A, IAMC_INFRA_RESOURCES_VW B
			WHERE A.INFRA_RSC_ID = B.INFRA_RSC_ID 
			AND A.RCVR_YN IS NULL AND A.ROOT_CAUSE_YN ='Y'
			AND B.TOP_INFRA_STRUCTURE_SEQ = (SELECT INFRA_STRUCTURE_SEQ FROM IAMC_INFRA_STRUCTURE_VW WHERE RSMO_CD =#RSMO_CD#)
			order by $sidx$ $sord$
		 ) A) WHERE 1=1 
		   AND RNUM > #sRow# AND RNUM <= #eRow#
	    ]]>
	</select>
	<select id="RarpRfidDAO.selectResRcvrList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			SELECT 
			   A.ROOT_CAUSE_YN, A.RCVR_YN, A.REG_DT, 
			   A.MOD_DT, A.RCVR_EVENT_ID, A.EVENT_ITEM, 
			   A.INFRA_RSC_ID, A.MON_LOG_ID, A.RCVR_RULE_ID, 
			   A.RCVR_STAT, A.REMARK,
			   B.INFRA_RSC_NM, B.HOST_IP, B.HOST_PORT, B.UI_INFRA_TYPE_NM_KO
			FROM RMCC_LOG_RCVR A, IAMC_INFRA_RESOURCES_VW B
			WHERE A.INFRA_RSC_ID = B.INFRA_RSC_ID 
			AND A.RCVR_YN IS NULL 
			AND A.ROOT_CAUSE_YN ='Y'
			AND A.RCVR_STAT = '103'
			<isNotNull prepend="AND" property="INFRA_RSC_ID">
				A.INFRA_RSC_ID = #INFRA_RSC_ID#
			</isNotNull>
	</select>
	<select id="RarpRfidDAO.selectReaderAntennaList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			SELECT 
			  INFRA_RSC_ID, RFIDREADER_ANTENNA_QUANTITY, ANTENNA1_STATUS, ANTENNA2_STATUS, ANTENNA3_STATUS, ANTENNA4_STATUS, TOP_INFRA_STRUCTURE_SEQ 
			FROM IAMC_READER_ANTENNA_STATE_VW
			WHERE TOP_INFRA_STRUCTURE_SEQ = (SELECT INFRA_STRUCTURE_SEQ FROM IAMC_INFRA_STRUCTURE_VW WHERE RSMO_CD =#RSMO_CD#)
			<isNotNull prepend="AND" property="INFRA_RSC_ID">
				INFRA_RSC_ID = #INFRA_RSC_ID#
			</isNotNull>

	</select>
	<select id="RarpRfidDAO.selectInfraList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[	
        SELECT 
		     INFRA_STRUCTURE_SEQ, PARENT_INFRA_STRUCTURE_SEQ, STRUCTURE_NAME, PRINT_SEQUENCE, 
			 MAP_USE_YN, ADDRESS, LATITUDE, LONGITUDE, BLUEPRINT_IMG_FILE_NAME, 
			 BLUEPRINT_IMG_FILE_PATH, PARENT_DEPTH_1_SEQ, PARENT_DEPTH_2_SEQ, NOW_DEPTH, NOW_DEPTH_1_SEQ, 
			 NOW_DEPTH_2_SEQ, NOW_DEPTH_3_SEQ, TOP_STRUCTURE_NAME, TOTAL_STRUCTURE_PATH_NM, INFRA_CNT, RSMO_CD 
	    FROM IAMC_INFRA_STRUCTURE_VW
	    ]]>
		  <dynamic prepend="WHERE">
			 <isNotNull prepend="AND" property="RSMO_CD">
				RSMO_CD = #RSMO_CD#
			 </isNotNull>
		</dynamic>
	</select>
	<select id="RarpRfidDAO.selectResourceList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[	
        SELECT 
		     INFRA_RSC_ID, REG_DT, USE_YN, INFRA_RSC_NM, INFRA_RSC_TYPE, PARENT_RSC_ID, 
			 HOST_NM, HOST_IP, HOST_PORT, COMP_ID, BASE_ID, LOC_INFO, RD_PNT_ID, CONTACT_NM, 
			 CONTACT_TEL, CONTACT_EMAIL, MW_WS_URL, IS_QUERY_URL, IS_CAPTURE_URL, REMARK, 
			 INFRA_MODELNAME_SEQ, INFRA_STRUCTURE_SEQ, PARENT_INFRA_RSC_ID, UI_INFRA_TYPE, 
			 BLUEPRINT_WIDTH_COORDINATE, BLUEPRINT_HEIGHT_COORDINATE, RFIDREADER_ANTENNA_QUANTITY, 
			 MIDDLEWARE_CONTROL_USE_YN, MIDDLEWARE_URL, MIDDLEWARE_ID, MIDDLEWARE_PASSWORD, 
			 CCTV_USE_YN, CCTV_IP, CCTV_PORT, CCTV_MAC, CCTV_ID, CCTV_PASSWORD, RESET_USE_YN, 
			 MONITORING_SKIN_IMG_USE_YN, MONITORING_SKIN_IMG_FILE_NAME, MONITORING_SKIN_IMG_FILE_PATH, 
			 PARENT_DEPTH_1_SEQ, STRUCTURE_NAME, MONITORING_TEMPLET_TYPE, NOW_DEPTH, NOW_DEPTH_INFRA_CNT, 
			 CHILDE_INFRA_CNT, UI_INFRA_TYPE_NM_KO, UI_INFRA_TYPE_NM_EN, UI_INFRA_TYPE_NM_JA, 
			 TOTAL_STRUCTURE_PATH_NM, TOP_INFRA_STRUCTURE_SEQ, USE_YN_NM_KO, USE_YN_NM_EN, USE_YN_NM_JA, 
			 MANUFACTURE_NAME, INFRA_MODEL_NAME, CCTV_USE_YN_NM_KO, CCTV_USE_YN_NM_EN, CCTV_USE_YN_NM_JA, 
			 RESET_USE_YN_NM_KO, RESET_USE_YN_NM_EN, RESET_USE_YN_NM_JA, MIDDLEWARE_CONTROL_USEYN_NM_KO, 
			 MIDDLEWARE_CONTROL_USEYN_NM_EN, MIDDLEWARE_CONTROL_USEYN_NM_JA, MONITOR_SKIN_IMG_USE_YN_NM_KO, 
			 MONITOR_SKIN_IMG_USE_YN_NM_EN, MONITOR_SKIN_IMG_USE_YN_NM_JA, NORMAL_ICON_IMG_FILE_NAME, 
			 NORMAL_ICON_IMG_FILE_PATH, INFRA_TYPE_DIVISION,
		(	SELECT COUNT(RCVR_EVENT_ID) FROM RMCC_LOG_RCVR WHERE RCVR_YN IS NULL AND RCVR_STAT <> 999 AND ROOT_CAUSE_YN='Y' AND INFRA_RSC_ID = A.INFRA_RSC_ID) RCVR_CNT
	    FROM IAMC_INFRA_RESOURCES_VW A
		WHERE 1=1 
	    ]]>
			 <isNotNull prepend="AND" property="PARENT_INFRA_RSC_ID">
				PARENT_INFRA_RSC_ID = #PARENT_INFRA_RSC_ID#
			 </isNotNull>
			 <isNotNull prepend="AND" property="TOP_INFRA_STRUCTURE_SEQ">
				TOP_INFRA_STRUCTURE_SEQ = #TOP_INFRA_STRUCTURE_SEQ#
			 </isNotNull>
			 <isNotNull prepend="AND" property="INFRA_RSC_TYPE">
				INFRA_RSC_TYPE = #INFRA_RSC_TYPE#
			 </isNotNull>
			 <isNotNull prepend="AND" property="INFRA_RSC_ID">
				INFRA_RSC_ID = #INFRA_RSC_ID#
			 </isNotNull>
		ORDER BY INFRA_STRUCTURE_SEQ desc
	</select>
	<select id="RarpRfidDAO.selectResMonInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[	
		SELECT 
		  INFRA_MONITORING_LOG_SEQ, REG_DT, INFRA_RSC_ID, INFRA_RSC_TYPE, INFRA_DATA_TYPE, 
		  EVENT_TYPE, EVENT_MSG, NVL(CPU, '0') CPU, NVL(MEM, '0') MEM, RD_SRC_NOISE, RD_BATTERY, NVL(DAT_COL_CNT, '0') DAT_COL_CNT,
		  NVL(TAG_ALARM_CNT, '0') TAG_ALARM_CNT, ANT_STAT, IO_PORT_STAT, RD_OP_STAT, RD_NET_STAT,
		  RD_POW_STAT, NVL(MW_HDD, '0') MW_HDD, NVL(MW_DPR_CNT, '0') MW_DPR_CNT, FNCU_ACTIVE_CNT, NVL(FNC_RPT_CNT, '0')  FNC_RPT_CNT, 
		  MW_DB_STAT, DPR_ALARM_CNT, RPT_ALARM_CNT, CPU_MAX, MEM_MAX, 
		  RD_SRC_NOISE_MAX, RD_BATTERY_MAX, DAT_COL_CNT_MAX, TAG_ALARM_CNT_MAX, 
		  ANT_STAT_MAX, IO_PORT_STAT_MAX, RD_OP_STAT_MAX, RD_NET_STAT_MAX, 
		  RD_POW_STAT_MAX, MW_HDD_MAX, MW_DPR_CNT_MAX, FNCU_ACTIVE_CNT_MAX, 
		  FNC_RPT_CNT_MAX, MW_DB_STAT_MAX, DPR_ALARM_CNT_MAX, RPT_ALARM_CNT_MAX, 
		  CPU_MIN, MEM_MIN, RD_SRC_NOISE_MIN, RD_BATTERY_MIN, DAT_COL_CNT_MIN, 
		  TAG_ALARM_CNT_MIN, ANT_STAT_MIN, IO_PORT_STAT_MIN, RD_OP_STAT_MIN, 
		  RD_NET_STAT_MIN, RD_POW_STAT_MIN, MW_HDD_MIN, MW_DPR_CNT_MIN, 
		  FNCU_ACTIVE_CNT_MIN, FNC_RPT_CNT_MIN, MW_DB_STAT_MIN, DPR_ALARM_CNT_MIN, 
		  RPT_ALARM_CNT_MIN, NVL(CPU_THRESHOLD, '0') CPU_THRESHOLD, NVL(MEM_THRESHOLD, '0') MEM_THRESHOLD, RD_SRC_NOISE_THRESHOLD, 
		  RD_BATTERY_THRESHOLD, NVL(DAT_COL_CNT_THRESHOLD, '0') DAT_COL_CNT_THRESHOLD, NVL(TAG_ALARM_CNT_THRESHOLD, '0') TAG_ALARM_CNT_THRESHOLD, 
		  ANT_STAT_THRESHOLD, IO_PORT_STAT_THRESHOLD, RD_OP_STAT_THRESHOLD, 
		  RD_NET_STAT_THRESHOLD, RD_POW_STAT_THRESHOLD, NVL(MW_HDD_THRESHOLD, '0') MW_HDD_THRESHOLD, 
		  NVL(MW_DPR_CNT_THRESHOLD, '0') MW_DPR_CNT_THRESHOLD, FNCU_ACTIVE_CNT_THRESHOLD, NVL(FNC_RPT_CNT_THRESHOLD, '0') FNC_RPT_CNT_THRESHOLD, 
		  MW_DB_STAT_THRESHOLD, DPR_ALARM_CNT_THRESHOLD, RPT_ALARM_CNT_THRESHOLD, 
		  CPU_THRESHOLD_MAX, MEM_THRESHOLD_MAX, RD_SRC_NOISE_THRESHOLD_MAX, 
		  RD_BATTERY_THRESHOLD_MAX, DAT_COL_CNT_THRESHOLD_MAX, TAG_ALARM_CNT_THRESHOLD_MAX, 
		  ANT_STAT_THRESHOLD_MAX, IO_PORT_STAT_THRESHOLD_MAX, RD_OP_STAT_THRESHOLD_MAX, 
		  RD_NET_STAT_THRESHOLD_MAX, RD_POW_STAT_THRESHOLD_MAX, MW_HDD_THRESHOLD_MAX, 
		  MW_DPR_CNT_THRESHOLD_MAX, FNCU_ACTIVE_CNT_THRESHOLD_MAX, FNC_RPT_CNT_THRESHOLD_MAX, 
		  MW_DB_STAT_THRESHOLD_MAX, DPR_ALARM_CNT_THRESHOLD_MAX, RPT_ALARM_CNT_THRESHOLD_MAX,
		  (	SELECT COUNT(RCVR_EVENT_ID) FROM RMCC_LOG_RCVR WHERE RCVR_YN IS NULL AND RCVR_STAT = '103' AND ROOT_CAUSE_YN='Y' AND INFRA_RSC_ID = #INFRA_RSC_ID#) RCVR_CNT
		FROM IAMC_INFRA_MONITORING_LOG_VW A
		WHERE REG_DT = 
		( SELECT 
			MAX(REG_DT)
          FROM IAMC_INFRA_MONITORING_LOG_VW B
          WHERE B.INFRA_RSC_ID = A.INFRA_RSC_ID )
	    ]]>
			 <isNotNull property="INFRA_RSC_ID">
				AND INFRA_RSC_ID = #INFRA_RSC_ID#
			 </isNotNull>
		ORDER BY REG_DT
	</select>
	<select id="RarpRfidDAO.selectTagSensingCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
			<![CDATA[	
			SELECT 
				   COUNT(A.PART_SN) TOTCNT
			FROM RARP_PART_TAG A, RARP_BOM_INFO C
				, ( SELECT RFID_TAG_ID, MAX(SNS_DT) SNS_DT fROM RARP_PART_TAG B GROUP BY RFID_TAG_ID) D
				, ( SELECT BOM_ID, PART_CD, TRN_KIND_CD FROM RARP_BOM_PART WHERE TRN_KIND_CD = #TRN_KIND_CD#) B
			WHERE A.SNS_DT = D.SNS_DT
			AND A.RFID_TAG_ID = D.RFID_TAG_ID
			AND A.CRG_TYPE_CD = #CRG_TYPE_CD#
			AND A.CRG_CD = #CRG_CD# 
			AND A.PRG_CD = #PRG_CD#
			AND A.PART_CD = B.PART_CD
			AND B.BOM_ID = C.BOM_ID
			AND B.TRN_KIND_CD = C.TRN_KIND_CD
		    ]]>
		 <isNotEmpty prepend="AND" property="GRS_CD">
			A.GRS_CD = #GRS_CD#
		 </isNotEmpty>
		 <isNotEmpty property="BOM_ID">
			 AND (C.BOM_ID = #BOM_ID#
			 <isNotEmpty property="OR_PARENT_BOM_ID">
				OR C.PARENT_BOM_ID = #OR_PARENT_BOM_ID#
			  </isNotEmpty>
			 )
		</isNotEmpty>
	</select>
	<select id="RarpRfidDAO.selectTagSensingList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		
		SELECT * FROM (     
		SELECT A.*, ROWNUM AS RNUM FROM (
			SELECT 
			    A.PART_CD || '_' || GRS_CD AS SEL_PART_ID
				, PART_SN, A.PART_CD, CRG_CD, PRG_CD, GRS_CD, CRG_TYPE_CD, PART_NM
				, B.BOM_ID
				, TO_CHAR(A.SNS_CALC_TIME, 'yyyy-mm-dd hh24:mi:ss') SNS_DT, D.RFID_TAG_ID, INFRA_RSC_ID, SNS_TYPE, SNS_VAL, INFRA_RSC_NM 
			FROM RARP_PART_TAG A, RARP_BOM_INFO C
				, ( SELECT RFID_TAG_ID, MAX(SNS_DT) SNS_DT fROM RARP_PART_TAG B GROUP BY RFID_TAG_ID) D
				, ( SELECT BOM_ID, PART_CD, TRN_KIND_CD FROM RARP_BOM_PART WHERE TRN_KIND_CD = #TRN_KIND_CD#) B
			WHERE A.SNS_DT = D.SNS_DT
			AND A.RFID_TAG_ID = D.RFID_TAG_ID
			AND A.CRG_TYPE_CD = #CRG_TYPE_CD#
			AND A.CRG_CD = #CRG_CD# 
			AND A.PRG_CD = #PRG_CD#
			AND A.PART_CD = B.PART_CD
			AND B.BOM_ID = C.BOM_ID
			AND B.TRN_KIND_CD = C.TRN_KIND_CD
			 <isNotEmpty prepend="AND" property="GRS_CD">
				 A.GRS_CD = #GRS_CD#
			 </isNotEmpty>	 
			<isNotEmpty property="BOM_ID">
				 AND (C.BOM_ID = #BOM_ID#
				 <isNotEmpty property="OR_PARENT_BOM_ID">
					OR C.PARENT_BOM_ID = #OR_PARENT_BOM_ID#
				  </isNotEmpty>
				 )
			 </isNotEmpty>
		<![CDATA[	
		  order by $sidx$ $sord$, BOM_ID, PARt_CD, PART_SN
		 ) A) WHERE RNUM > #sRow# AND RNUM <= #eRow#
	    ]]>

	</select>	
	<select id="RarpRfidDAO.selectTagSensingPartList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			SELECT 
			   DISTINCT A.PART_CD || '_' || A.GRS_CD AS SEL_PART_ID,
				A.PART_SN, A.PART_CD, A.CRG_CD, A.PRG_CD, A.GRS_CD, A.CRG_TYPE_CD, A.PART_NM,
				B.BOM_ID, 
				TO_CHAR(A.SNS_CALC_TIME, 'yyyy-mm-dd hh24 mi ss') SNS_DT, D.RFID_TAG_ID, INFRA_RSC_ID, SNS_TYPE, SNS_VAL, INFRA_RSC_NM 
				FROM RARP_PART_TAG A, RARP_BOM_INFO C
				, ( SELECT RFID_TAG_ID, MAX(SNS_DT) SNS_DT fROM RARP_PART_TAG B GROUP BY RFID_TAG_ID) D
				, ( SELECT BOM_ID, PART_CD, TRN_KIND_CD FROM RARP_BOM_PART WHERE TRN_KIND_CD = #TRN_KIND_CD#) B
			WHERE A.SNS_DT = D.SNS_DT
			AND A.RFID_TAG_ID = D.RFID_TAG_ID
			AND A.CRG_TYPE_CD = #CRG_TYPE_CD#
			AND A.CRG_CD = #CRG_CD# 
			AND A.PRG_CD = #PRG_CD#
			AND A.PART_CD = B.PART_CD
			AND B.BOM_ID = C.BOM_ID
			AND B.TRN_KIND_CD = C.TRN_KIND_CD
		 <isNotEmpty prepend="AND" property="GRS_CD">
			 A.GRS_CD = #GRS_CD#
		 </isNotEmpty>
	     <isNotEmpty property="BOM_ID">
			 AND (C.BOM_ID = #BOM_ID#
			 <isNotEmpty property="OR_PARENT_BOM_ID">
				OR C.PARENT_BOM_ID = #OR_PARENT_BOM_ID#
			  </isNotEmpty>
			 )
		 </isNotEmpty>
	</select>	
	<select id="RarpRfidDAO.selectTagPartList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			SELECT 
				DISTINCT A.PART_CD || '_' || A.GRS_CD AS SEL_PART_ID,
				A.PART_SN, A.RFID_TAG_ID, A.PART_CD, A.CRG_CD, A.PRG_CD, GRS_CD, CRG_TYPE_CD,
				C.BOM_ID
			FROM RARP_PART_DTL A, RARP_PRG_CRG B, RARP_BOM_INFO D
				, ( SELECT BOM_ID, PART_CD, TRN_KIND_CD FROM RARP_BOM_PART WHERE TRN_KIND_CD = #TRN_KIND_CD#) C
			WHERE A.PRG_CD = B.PRG_CD 
			AND A.CRG_CD = B.CRG_CD 
			AND A.PART_CD = C.PART_CD
			AND C.BOM_ID = D.BOM_ID
			AND A.CRG_CD = #CRG_CD# 
			AND A.PRG_CD = #PRG_CD#
			AND A.PART_CD IN(
						SELECT 
							DISTINCT A.PART_CD 
						FROM RARP_PART_TAG A
						, ( SELECT RFID_TAG_ID, MAX(SNS_DT) SNS_DT fROM RARP_PART_TAG B GROUP BY RFID_TAG_ID) E
						WHERE A.SNS_DT = E.SNS_DT
						AND A.RFID_TAG_ID = E.RFID_TAG_ID
						AND B.CRG_TYPE_CD = #CRG_TYPE_CD#
						AND A.CRG_CD = #CRG_CD# 
						AND A.PRG_CD = #PRG_CD#
			)
			 <isEqual property="CRG_TYPE_CD" compareValue="01">
			    AND D.TC1_YN = 'Y'
			 </isEqual>
			 <isEqual property="CRG_TYPE_CD" compareValue="02">
				AND D.TC2_YN = 'Y'
			 </isEqual>
			 <isEqual property="CRG_TYPE_CD" compareValue="03">
				AND D.M_YN = 'Y'
			  </isEqual>
			 <isEqual property="CRG_TYPE_CD" compareValue="04">
				AND D.T1_YN = 'Y'
			  </isEqual>
			<isEqual property="CRG_TYPE_CD" compareValue="05">
				AND D.T2_YN = 'Y'
			  </isEqual>
			 <isNotEmpty prepend="AND" property="GRS_CD">
			 A.GRS_CD = #GRS_CD#
		    </isNotEmpty>
			<isNotEmpty property="BOM_ID">
				 AND (D.BOM_ID = #BOM_ID#
				 <isNotEmpty property="OR_PARENT_BOM_ID">
					OR D.PARENT_BOM_ID = #OR_PARENT_BOM_ID#
				  </isNotEmpty>
				 )
			 </isNotEmpty>

	</select>	
    <select id="RarpRfidDAO.selectTagParentPartList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			SELECT 
				DISTINCT A.PART_CD || '_' || A.GRS_CD AS SEL_PART_ID,
				A.PART_SN, A.RFID_TAG_ID, A.PART_CD, A.CRG_CD, A.PRG_CD, GRS_CD, CRG_TYPE_CD,
				C.BOM_ID
			FROM RARP_PART_DTL A, RARP_PRG_CRG B, RARP_BOM_INFO D
				, ( SELECT BOM_ID, PART_CD, TRN_KIND_CD FROM RARP_BOM_PART WHERE TRN_KIND_CD = #TRN_KIND_CD#) C
			WHERE A.PRG_CD = B.PRG_CD 
			AND A.CRG_CD = B.CRG_CD 
			AND A.PART_CD = C.PART_CD
			AND C.BOM_ID = D.BOM_ID
			AND A.CRG_CD = #CRG_CD# 
			AND A.PRG_CD = #PRG_CD#
			 <isEqual property="CRG_TYPE_CD" compareValue="01">
			    AND D.TC1_YN = 'Y'
			 </isEqual>
			 <isEqual property="CRG_TYPE_CD" compareValue="02">
				AND D.TC2_YN = 'Y'
			 </isEqual>
			 <isEqual property="CRG_TYPE_CD" compareValue="03">
				AND D.M_YN = 'Y'
			  </isEqual>
			 <isEqual property="CRG_TYPE_CD" compareValue="04">
				AND D.T1_YN = 'Y'
			  </isEqual>
			<isEqual property="CRG_TYPE_CD" compareValue="05">
				AND D.T2_YN = 'Y'
			 </isEqual>	
		     <isNotEmpty property="BOM_ID">
			    AND D.BOM_ID = (SELECT PARENT_BOM_ID FROM RARP_BOM_INFO WHERE BOM_ID = #BOM_ID#)
		     </isNotEmpty>
	</select>	
</sqlMap>