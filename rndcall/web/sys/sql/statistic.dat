########################################################################### 
# ���� Query
###########################################################################

#==============================================================
# �оߺ� ��� ��ȸ
#==============================================================
@sql.statistic.getStatCategory
SELECT 
    A.BOARD_TYPE
    , A.CATEGORY_ID
    , A.CATEGORY_NM
    , A.ORDER_NO
    , A.CATEGORY_ID2
    , A.CATEGORY_NM2
    , A.ORDER_NO2
    , B.TOT_CNT
    , B.ONLINE_CNT
    , B.OFFLINE_CNT
    , B.ANSWER_Y_CNT
    , B.ANSWER_N_CNT
FROM (
    SELECT 
        'QNA' BOARD_TYPE
        , A.CATEGORY_ID
        , A.CATEGORY_NM
        , A.ORDER_NO
        , NVL(B.CATEGORY_ID, '') CATEGORY_ID2
        , B.CATEGORY_NM CATEGORY_NM2
        , B.ORDER_NO ORDER_NO2
    FROM RNDCALL_CATEGORY A
    LEFT OUTER JOIN RNDCALL_CATEGORY B
        ON B.PARENT_ID = A.CATEGORY_ID
        AND B.ISUSE = 'Y'
    WHERE
        A.PARENT_ID = -1
        AND A.QNA_YN = 'Y'
        AND A.ISUSE = 'Y'
    UNION ALL
    SELECT 
        'OFFER' BOARD_TYPE
        , A.CATEGORY_ID
        , A.CATEGORY_NM
        , A.ORDER_NO
        , NVL(B.CATEGORY_ID, '') CATEGORY_ID2
        , B.CATEGORY_NM CATEGORY_NM2
        , B.ORDER_NO ORDER_NO2
    FROM RNDCALL_CATEGORY A
    LEFT OUTER JOIN RNDCALL_CATEGORY B
        ON B.PARENT_ID = A.CATEGORY_ID
        AND B.ISUSE = 'Y'
    WHERE
        A.PARENT_ID = -1
        AND A.ISUSE = 'Y'
) A
LEFT OUTER JOIN (
    SELECT
        A.BOARD_TYPE
        , DECODE(A.CATEGORY1, NULL, '99999999', '', '99999999', A.CATEGORY1) CATEGORY1
        , NVL(A.CATEGORY2, '') CATEGORY2
        , COUNT(*) TOT_CNT
        , SUM(DECODE(A.INSERT_TYPE, 'ONLINE', 1, 0)) ONLINE_CNT
        , SUM(DECODE(A.INSERT_TYPE, 'OFFLINE', 1, 0)) OFFLINE_CNT
        , SUM(DECODE(B.SEQ, NULL, 0, 1)) ANSWER_Y_CNT
        , SUM(DECODE(B.SEQ, NULL, 1, 0)) ANSWER_N_CNT
    FROM RNDCALL_BOARD_QUESTION A
    LEFT OUTER JOIN RNDCALL_BOARD_ANSWER B
        ON B. Q_SEQ = A.SEQ
    INNER JOIN RNDCALL_CATEGORY C
        ON C.CATEGORY_ID = DECODE(A.CATEGORY1, NULL, '99999999', '', '99999999', A.CATEGORY1)
        AND C.ISUSE = 'Y'
    INNER JOIN RNDCALL_CATEGORY D
        ON D.CATEGORY_ID = DECODE(A.CATEGORY1, NULL, '99999999', '', '99999999', A.CATEGORY1)
        AND D.ISUSE = 'Y'
    WHERE 
        A.DEL_YN ='N'
        AND A.BOARD_TYPE IN ( 'QNA', 'OFFER' )
        AND TO_CHAR(A.REG_DT, 'YYYYMM') BETWEEN ? AND ?
    GROUP BY
        A.BOARD_TYPE
        , A.CATEGORY1
        , A.CATEGORY2
) B
    ON B.BOARD_TYPE = A.BOARD_TYPE
    AND B.CATEGORY1 = A.CATEGORY_ID
    AND B.CATEGORY2 = A.CATEGORY_ID2
ORDER BY 
    A.BOARD_TYPE DESC
    , A.ORDER_NO
    , A.ORDER_NO2


      
#==============================================================
# �Ⱓ�� ��� ��ȸ
#==============================================================
@sql.statistic.getStatDate     
SELECT tot.mm,tot.CD_DTL_NM, total_cnt, online_cnt, offline_cnt ,answer_y_cnt,answer_n_cnt
FROM (
      SELECT TO_NUMBER(SUBSTR(B.CD_DTL_ID,3,5)) AS mm, B.CD_DTL_NM, NVL(total_cnt,'0') AS total_cnt
      FROM (
            SELECT TO_CHAR(Q.reg_dt,'mm') AS date_mm, COUNT(*) AS total_cnt FROM RNDCALL_BOARD_QUESTION Q
            WHERE Q.board_type='QNA'
                  AND Q.DEL_YN='N'
          AND Q.INSERT_TYPE != 'TEL'
                  AND TO_CHAR(Q.reg_dt,'yyyymm') BETWEEN ? AND ?
            GROUP BY TO_CHAR(Q.reg_dt,'mm')
            ) A RIGHT OUTER JOIN RNDCALL_CODE B ON A.DATE_MM = TO_NUMBER(SUBSTR(B.CD_DTL_ID, 3, 5))
      WHERE AND B.cd_id='100'
      ) tot LEFT OUTER JOIN 
      (
      SELECT TO_NUMBER(SUBSTR(B.CD_DTL_ID,3,5)) AS mm, B.CD_DTL_NM, NVL(online_cnt,'0') AS online_cnt
      FROM (
            SELECT TO_CHAR(Q.reg_dt,'mm') AS date_mm, COUNT(*) AS online_cnt FROM RNDCALL_BOARD_QUESTION Q
            WHERE Q.board_type='QNA'
                  AND Q.DEL_YN='N'
                  AND Q.INSERT_TYPE='ONLINE'
                  AND TO_CHAR(Q.reg_dt,'yyyymm') BETWEEN ? AND ?
            GROUP BY TO_CHAR(Q.reg_dt,'mm')
            ) A, RNDCALL_CODE B
      WHERE a.date_mm(+) = TO_NUMBER(SUBSTR(B.CD_DTL_ID,3,5))
            AND B.cd_id='100' 
      ) onL ON TOT.MM = ONL.MM
      LEFT OUTER JOIN
      (
      SELECT TO_NUMBER(SUBSTR(B.CD_DTL_ID,3,5)) AS mm, B.CD_DTL_NM, NVL(offline_cnt,'0') AS offline_cnt
      FROM (
            SELECT TO_CHAR(Q.reg_dt,'mm') AS date_mm, COUNT(*) AS offline_cnt FROM RNDCALL_BOARD_QUESTION Q
            WHERE Q.board_type='QNA'
                  AND Q.DEL_YN='N'
                  AND Q.INSERT_TYPE='OFFLINE'
                  AND TO_CHAR(Q.reg_dt,'yyyymm') BETWEEN ? AND ?
            GROUP BY TO_CHAR(Q.reg_dt,'mm')
            ) A RIGHT OUTER JOIN RNDCALL_CODE B ON a.date_mm = TO_NUMBER(SUBSTR(B.CD_DTL_ID,3,5))
      WHERE B.cd_id='100' 
      ) offL ON TOT.MM = OFFL.MM 
      LEFT OUTER JOIN
      (
      SELECT TO_NUMBER(SUBSTR(B.CD_DTL_ID,3,5)) AS mm, B.CD_DTL_NM, NVL(answer_y_cnt,'0') AS answer_y_cnt
      FROM (
            SELECT TO_CHAR(Q.reg_dt,'mm') AS date_mm, COUNT(*) AS answer_y_cnt FROM RNDCALL_BOARD_QUESTION Q
            WHERE Q.board_type='QNA'
                  AND Q.DEL_YN='N'
          AND Q.INSERT_TYPE != 'TEL'
                  AND EXISTS (SELECT 1 FROM RNDCALL_BOARD_ANSWER S WHERE Q.SEQ = S.Q_SEQ)
                  AND TO_CHAR(Q.reg_dt,'yyyymm') BETWEEN ? AND ?
            GROUP BY TO_CHAR(Q.reg_dt,'mm')
            ) A RIGHT OUTER JOIN RNDCALL_CODE B ON a.date_mm = TO_NUMBER(SUBSTR(B.CD_DTL_ID,3,5))
      WHERE B.cd_id='100' 
      ) answer_y ON TOT.MM = ANSWER_Y.MM
      LEFT OUTER JOIN
      (
      SELECT TO_NUMBER(SUBSTR(B.CD_DTL_ID,3,5)) AS mm, B.CD_DTL_NM, NVL(answer_n_cnt,'0') AS answer_n_cnt
      FROM (
            SELECT TO_CHAR(Q.reg_dt,'mm') AS date_mm, COUNT(*) AS answer_n_cnt FROM RNDCALL_BOARD_QUESTION Q
            WHERE Q.board_type='QNA'
                  AND Q.DEL_YN='N'
          AND Q.INSERT_TYPE != 'TEL'
                  AND NOT EXISTS (SELECT 1 FROM RNDCALL_BOARD_ANSWER S WHERE Q.SEQ = S.Q_SEQ)
                  AND TO_CHAR(Q.reg_dt,'yyyymm') BETWEEN ? AND ?
            GROUP BY TO_CHAR(Q.reg_dt,'mm')
            ) A RIGHT OUTER JOIN RNDCALL_CODE B a.date_mm = TO_NUMBER(SUBSTR(B.CD_DTL_ID,3,5))
      WHERE B.cd_id='100' 
      ) answer_n ON TOT.MM = ANSWER_N.MM
WHERE tot.mm BETWEEN ? AND ?
ORDER BY TO_NUMBER(tot.mm) asc



#==============================================================
# ��ü ������ ��� ��ȸ
#==============================================================
@sql.statistic.getVisitTotal
SELECT COUNT(*) AS CNT 
FROM RNDCALL_VISIT

#==============================================================
# �⵵�� ������ ��� ��ȸ
#==============================================================
@sql.statistic.getVisitYYrndcall
SELECT TO_NUMBER(TO_CHAR(visit_dt,'yyyy')) AS CODE, 
   	   COUNT(*) AS CNT 
FROM RNDCALL_VISIT
GROUP BY TO_NUMBER(TO_CHAR(visit_dt,'yyyy'))
@sql.statistic.getVisitYY
SELECT TO_NUMBER(TO_CHAR(visit_dt,'yyyy')) AS CODE, 
   COUNT(*) AS CNT 
FROM RNDCALL_VISIT
GROUP BY TO_NUMBER(TO_CHAR(visit_dt,'yyyy'))

 

#==============================================================
# �� ������ ��� ��ȸ
#==============================================================
@sql.statistic.getVisitMM

SELECT TO_NUMBER(TO_CHAR(A.visit_dt,'mm')) AS CODE, 
   	   COUNT(*) AS CNT 
FROM RNDCALL_VISIT A RIGHT OUTER JOIN RNDCALL_CODE B ON TO_NUMBER(TO_CHAR(A.VISIT_DT, 'MM')) = TO_NUMBER(SUBSTR(B.CD_DTL_ID, 3, 5))
WHERE B.CD_ID='100'
   	  AND B.USE_YN='Y' 



#==============================================================
# �Ϻ� ������ ��� ��ȸ
#==============================================================
@sql.statistic.getVisitDD 
SELECT TO_NUMBER(TO_CHAR(A.visit_dt,'dd')) AS CODE, 
   	   COUNT(*) AS CNT 
FROM RNDCALL_VISIT A RIGHT OUTER JOIN RNDCALL_CODE B ON TO_NUMBER(TO_CHAR(A.visit_dt,'dd')) = B.CD_DTL_ID
   	  WHERE B.CD_ID='101'
      AND B.USE_YN='Y' 
      
      
#==============================================================
# �оߺ� ��� �� ����Ʈ
#==============================================================
@sql.statistic.getStatList
SELECT  Q.SEQ,             Q.BOARD_TYPE,       Q.TITLE,            Q.CONTENTS,
	    Q.CELL_RECEIVE_YN, NVL(Q.CELL_NUMBER,'-') AS CELL_NUMBER,      Q.EMAIL_RECEIVE_YN, NVL(Q.EMAIL,'@') AS EMAIL,
	    NVL(Q.OPEN_YN,'Y') AS OPEN_YN,         NVL(Q.PUBLIC_TRANS_YN,'N') AS PUBLIC_TRANS_YN, Q.PUBLIC_TRANS_ID,  Q.INSERT_TYPE,
	    Q.NTIS_REG_ID,     Q.FILE_ID AS QUESTION_FILE_ID,          Q.DEL_YN,           Q.READ_COUNT,
	    Q.REG_ID,          Q.REG_DT,           TO_CHAR(Q.REG_DT,'yyyy.mm.dd') AS REG_DT1,           Q.REG_NM,           NVL(Q.CATEGORY1,'0000000') AS CATEGORY1,
	    NVL(Q.CATEGORY2,'0000000') AS CATEGORY2,
	    NVL((SELECT CATEGORY_NM FROM RNDCALL_CATEGORY WHERE CATEGORY_ID = DECODE(Q.CATEGORY1, NULL, 99999999, '', 99999999, Q.CATEGORY1)), '선택') AS CATEGORY1_NM, 
		NVL((SELECT CATEGORY_NM FROM RNDCALL_CATEGORY WHERE CATEGORY_ID = DECODE(Q.CATEGORY2, NULL, 99999999, '', 99999999, Q.CATEGORY2)), '선택') AS CATEGORY2_NM,
	    A.ANSWER_CONT, A.FILE_ID AS ANSWER_FILE_ID,
	    (CASE WHEN DECODE(A.SEQ,NULL,'N','Y')  = 'Y' THEN 'N'
              WHEN TO_CHAR(Q.REG_DT,'YYYYMMDD') < (TO_CHAR(sysdatetime,'YYYYMMDD')-1) THEN 'N'
              ELSE 'Y'
         END ) AS UP_DEL_STAT,
         DECODE(A.SEQ,null,'N',DECODE(A.COMPLETE_YN, NULL, 'S', 'Y')) AS STAT, NVL(A.SEQ,'0') AS ANSWER_SEQ
FROM RNDCALL_BOARD_QUESTION Q LEFT OUTER JOIN RNDCALL_BOARD_ANSWER A ON Q.SEQ = A.Q_SEQ
WHERE Q.DEL_YN='N'
          AND Q.INSERT_TYPE != 'TEL'

#==============================================================
# �оߺ� ��� �� ����Ʈ
#==============================================================
@sql.statistic.getStatList1
SELECT  Q.SEQ,             Q.BOARD_TYPE,       Q.TITLE,            CLOB_TO_CHAR(Q.CONTENTS) AS CONTENTS,
Q.CELL_RECEIVE_YN, NVL(Q.CELL_NUMBER,'-') AS CELL_NUMBER,      Q.EMAIL_RECEIVE_YN, NVL(Q.EMAIL,'@') AS EMAIL,
NVL(Q.OPEN_YN,'Y') AS OPEN_YN,         NVL(Q.PUBLIC_TRANS_YN,'N') AS PUBLIC_TRANS_YN, Q.PUBLIC_TRANS_ID,  Q.INSERT_TYPE,
Q.NTIS_REG_ID,     Q.FILE_ID AS QUESTION_FILE_ID,          Q.DEL_YN,           Q.READ_COUNT,
Q.REG_ID,          Q.REG_DT,           TO_CHAR(Q.REG_DT,'yyyy.mm.dd') AS REG_DT1,           Q.REG_NM,           NVL(Q.CATEGORY1,'0000000') AS CATEGORY1,
NVL(Q.CATEGORY2,'0000000') AS CATEGORY2,
NVL((SELECT CATEGORY_NM FROM RNDCALL_CATEGORY WHERE CATEGORY_ID = DECODE(Q.CATEGORY1, NULL, 99999999, '', 99999999, Q.CATEGORY1)), '선택') AS CATEGORY1_NM, 
NVL((SELECT CATEGORY_NM FROM RNDCALL_CATEGORY WHERE CATEGORY_ID = DECODE(Q.CATEGORY2, NULL, 99999999, '', 99999999, Q.CATEGORY2)), '선택') AS CATEGORY2_NM
FROM RNDCALL_BOARD_QUESTION Q
WHERE Q.DEL_YN='N'
          AND Q.INSERT_TYPE != 'TEL'


#==============================================================
# �Ⱓ�� ��� �� ����Ʈ
#==============================================================
@sql.statistic.getStatList2 
SELECT  Q.SEQ,             Q.BOARD_TYPE,       Q.TITLE,            CLOB_TO_CHAR(Q.CONTENTS) AS CONTENTS,
Q.CELL_RECEIVE_YN, NVL(Q.CELL_NUMBER,'-') AS CELL_NUMBER,      Q.EMAIL_RECEIVE_YN, NVL(Q.EMAIL,'@') AS EMAIL,
NVL(Q.OPEN_YN,'Y') AS OPEN_YN,         NVL(Q.PUBLIC_TRANS_YN,'N') AS PUBLIC_TRANS_YN, Q.PUBLIC_TRANS_ID,  Q.INSERT_TYPE,
Q.NTIS_REG_ID,     Q.FILE_ID AS QUESTION_FILE_ID,          Q.DEL_YN,           Q.READ_COUNT,
Q.REG_ID,          Q.REG_DT,           TO_CHAR(Q.REG_DT,'yyyy.mm.dd') AS REG_DT1,           Q.REG_NM,           NVL(Q.CATEGORY1,'0000000') AS CATEGORY1,
NVL(Q.CATEGORY2,'0000000') AS CATEGORY2,
NVL((SELECT CATEGORY_NM FROM RNDCALL_CATEGORY WHERE CATEGORY_ID = Q.CATEGORY1), '선택') AS CATEGORY1_NM, 
NVL((SELECT CATEGORY_NM FROM RNDCALL_CATEGORY WHERE CATEGORY_ID = Q.CATEGORY2), '선택') AS CATEGORY2_NM,
A.ANSWER_CONT, A.FILE_ID AS ANSWER_FILE_ID,
(CASE WHEN DECODE(A.SEQ,NULL,'N','Y')  = 'Y' THEN 'N'
              WHEN TO_CHAR(Q.REG_DT,'YYYYMMDD') < (TO_CHAR(sysdatetime,'YYYYMMDD')-1) THEN 'N'
              ELSE 'Y'
         END ) AS UP_DEL_STAT,
         DECODE(A.SEQ,NULL,'N','Y') AS STAT, NVL(A.SEQ,'0') AS ANSWER_SEQ
FROM RNDCALL_BOARD_QUESTION Q LEFT OUTER JOIN RNDCALL_BOARD_ANSWER A ON Q.SEQ = A.Q_SEQ
WHERE Q.DEL_YN='N'
      AND Q.BOARD_TYPE='QNA'
      

#==============================================================
# �Ⱓ�� ��� �� ����Ʈ
#==============================================================
@sql.statistic.getStatList3
SELECT  Q.SEQ,             Q.BOARD_TYPE,       Q.TITLE,            Q.CONTENTS,
	    Q.CELL_RECEIVE_YN, NVL(Q.CELL_NUMBER,'-') AS CELL_NUMBER,      Q.EMAIL_RECEIVE_YN, NVL(Q.EMAIL,'@') AS EMAIL,
	    NVL(Q.OPEN_YN,'Y') AS OPEN_YN,         NVL(Q.PUBLIC_TRANS_YN,'N') AS PUBLIC_TRANS_YN, Q.PUBLIC_TRANS_ID,  Q.INSERT_TYPE,
	    Q.NTIS_REG_ID,     Q.FILE_ID AS QUESTION_FILE_ID,          Q.DEL_YN,           Q.READ_COUNT,
	    Q.REG_ID,          Q.REG_DT,           TO_CHAR(Q.REG_DT,'yyyy.mm.dd') AS REG_DT1,           Q.REG_NM,           NVL(Q.CATEGORY1,'0000000') AS CATEGORY1,
	    NVL(Q.CATEGORY2,'0000000') AS CATEGORY2,
	    NVL((SELECT CATEGORY_NM FROM RNDCALL_CATEGORY WHERE CATEGORY_ID = Q.CATEGORY1), '선택') AS CATEGORY1_NM, 
		NVL((SELECT CATEGORY_NM FROM RNDCALL_CATEGORY WHERE CATEGORY_ID = Q.CATEGORY2), '선택') AS CATEGORY2_NM
FROM RNDCALL_BOARD_QUESTION Q
WHERE Q.DEL_YN='N'
      AND Q.BOARD_TYPE='QNA'
	  
	  
#==============================================================
# �оߺ� ��� ������ ����Ʈ
#==============================================================
@sql.statistic.getStatView
SELECT  Q.SEQ,             Q.BOARD_TYPE,       Q.TITLE,            CLOB_TO_CHAR(Q.CONTENTS) AS CONTENTS,
Q.CELL_RECEIVE_YN, NVL(Q.CELL_NUMBER,'-') AS CELL_NUMBER,      Q.EMAIL_RECEIVE_YN, NVL(Q.EMAIL,'@') AS EMAIL,
NVL(Q.OPEN_YN,'Y') AS OPEN_YN,         NVL(Q.PUBLIC_TRANS_YN,'N') AS PUBLIC_TRANS_YN, Q.PUBLIC_TRANS_ID,  Q.INSERT_TYPE,
Q.NTIS_REG_ID,     Q.FILE_ID AS QUESTION_FILE_ID,          Q.DEL_YN,           Q.READ_COUNT,
Q.REG_ID,          Q.REG_DT,           TO_CHAR(Q.REG_DT,'yyyy.mm.dd') AS REG_DT1,           Q.REG_NM,           NVL(Q.CATEGORY1,'0000000') AS CATEGORY1,
NVL(Q.CATEGORY2,'0000000') AS CATEGORY2,
NVL((SELECT CATEGORY_NM FROM RNDCALL_CATEGORY WHERE CATEGORY_ID = Q.CATEGORY1), '선택') AS CATEGORY1_NM, 
NVL((SELECT CATEGORY_NM FROM RNDCALL_CATEGORY WHERE CATEGORY_ID = Q.CATEGORY2), '선택') AS CATEGORY2_NM,
A.ANSWER_CONT, A.FILE_ID AS ANSWER_FILE_ID,
(CASE WHEN DECODE(A.SEQ,NULL,'N','Y')  = 'Y' THEN 'N'
              WHEN TO_CHAR(Q.REG_DT,'YYYYMMDD') < (TO_CHAR(sysdatetime,'YYYYMMDD')-1) THEN 'N'
              ELSE 'Y'
         END ) AS UP_DEL_STAT,
         DECODE(A.SEQ,NULL,'N','Y') AS STAT, NVL(A.SEQ,'0') AS ANSWER_SEQ
FROM RNDCALL_BOARD_QUESTION Q LEFT OUTER JOIN RNDCALL_BOARD_ANSWER A ON Q.SEQ = A.Q_SEQ
WHERE Q.DEL_YN='N' 

#==============================================================
# 게시판유형별 통계.
#==============================================================
@sql.statistic.getStatBoardType
SELECT
    A.BOARD_TYPE
    , COUNT(*) TOTAL_CNT
    , SUM(DECODE(A.INSERT_TYPE, 'ONLINE', 1, 0)) ONLINE_CNT
    , SUM(DECODE(A.INSERT_TYPE, 'OFFLINE', 1, 0)) OFFLINE_CNT
    , SUM(DECODE(B.SEQ, NULL, 0, 1)) ANSWER_Y_CNT
    , SUM(DECODE(B.SEQ, NULL, 1, 0)) ANSWER_N_CNT
FROM RNDCALL_BOARD_QUESTION A
LEFT OUTER JOIN RNDCALL_BOARD_ANSWER B
    ON B.Q_SEQ = A.SEQ
INNER JOIN RNDCALL_CATEGORY C
    ON C.CATEGORY_ID = DECODE(A.CATEGORY1, NULL, '99999999', '', '99999999', A.CATEGORY1)
    AND C.ISUSE = 'Y'
INNER JOIN RNDCALL_CATEGORY D
    ON D.CATEGORY_ID = DECODE(A.CATEGORY1, NULL, '99999999', '', '99999999', A.CATEGORY1)
    AND D.ISUSE = 'Y'
WHERE 
    A.DEL_YN ='N'
    AND A.BOARD_TYPE IN ( 'QNA', 'OFFER' )
    AND TO_CHAR(A.REG_DT, 'YYYYMM') BETWEEN ? AND ?
GROUP BY
    A.BOARD_TYPE
ORDER BY 
    A.BOARD_TYPE DESC
    
#==============================================================
# 사용자 소속별 통계.
#==============================================================
@sql.statistic.getStatQueryUserInfo
SELECT A.BOARD_TYPE, A.BOARD_TYPE_NM, A.USER_TYPE, A.USER_TYPE_NM, A.QUERY_USER_INFO, A.QUERY_USER_INFO_NM, B.TOTAL_CNT, B.ONLINE_CNT, B.OFFLINE_CNT, B.ANSWER_Y_CNT, B.ANSWER_N_CNT FROM (
    SELECT A.BOARD_TYPE, A.BOARD_TYPE_NM, B.USER_TYPE, B.USER_TYPE_NM, C.QUERY_USER_INFO, C.QUERY_USER_INFO_NM FROM (
        SELECT 'QNA' BOARD_TYPE, '온라인 상담' BOARD_TYPE_NM
        UNION ALL
        SELECT 'OFFER' BOARD_TYPE, 'R&D 신문고' BOARD_TYPE_NM
    ) A
    CROSS JOIN (
        SELECT A.USER_TYPE, A.USER_TYPE_NM FROM (
            SELECT '01' USER_TYPE, '회원' USER_TYPE_NM
            UNION ALL
            SELECT '02' USER_TYPE, '비회원' USER_TYPE_NM
        ) A
    ) B
    CROSS JOIN (
        SELECT A.QUERY_USER_INFO, A.QUERY_USER_INFO_NM FROM (
            SELECT '1' QUERY_USER_INFO, '중앙행정기관' QUERY_USER_INFO_NM
            UNION ALL
            SELECT '2' QUERY_USER_INFO, '전문기관' QUERY_USER_INFO_NM
            UNION ALL
            SELECT '3' QUERY_USER_INFO, '정부출연연구기관' QUERY_USER_INFO_NM
            UNION ALL
            SELECT '4' QUERY_USER_INFO, '대학' QUERY_USER_INFO_NM
            UNION ALL
            SELECT '5' QUERY_USER_INFO, '기업' QUERY_USER_INFO_NM
            UNION ALL
            SELECT '6' QUERY_USER_INFO, '기타' QUERY_USER_INFO_NM
            UNION ALL
            SELECT '0' QUERY_USER_INFO, '무소속' QUERY_USER_INFO_NM
        ) A
    ) C
) A
LEFT OUTER JOIN (
    SELECT
        A.BOARD_TYPE
        , DECODE(A.REG_ID, '', '02', NULL, '02', '01') USER_TYPE
        , DECODE(A.QUERY_USER_INFO, NULL, '0', '', '0', A.QUERY_USER_INFO) QUERY_USER_INFO
        , COUNT(*) TOTAL_CNT
        , SUM(DECODE(A.INSERT_TYPE, 'ONLINE', 1, 0)) ONLINE_CNT
        , SUM(DECODE(A.INSERT_TYPE, 'OFFLINE', 1, 0)) OFFLINE_CNT
        , SUM(DECODE(B.SEQ, NULL, 0, 1)) ANSWER_Y_CNT
        , SUM(DECODE(B.SEQ, NULL, 1, 0)) ANSWER_N_CNT
    FROM RNDCALL_BOARD_QUESTION A
    LEFT OUTER JOIN RNDCALL_BOARD_ANSWER B
        ON B.Q_SEQ = A.SEQ
    INNER JOIN RNDCALL_CATEGORY C
        ON C.CATEGORY_ID = DECODE(A.CATEGORY1, NULL, '99999999', '', '99999999', A.CATEGORY1)
        AND C.ISUSE = 'Y'
    INNER JOIN RNDCALL_CATEGORY D
        ON D.CATEGORY_ID = DECODE(A.CATEGORY1, NULL, '99999999', '', '99999999', A.CATEGORY1)
        AND D.ISUSE = 'Y'
    WHERE   
        A.DEL_YN ='N'
        AND A.BOARD_TYPE IN ( 'QNA', 'OFFER' )
        AND TO_CHAR(A.REG_DT, 'YYYYMM') BETWEEN ? AND ?
    GROUP BY
        A.BOARD_TYPE
        , DECODE(A.REG_ID, '', '비회원', NULL, '비회원', '회원')
        , DECODE(A.QUERY_USER_INFO, NULL, '0', '', '0', A.QUERY_USER_INFO)
) B
    ON B.BOARD_TYPE = A.BOARD_TYPE
    AND B.USER_TYPE = A.USER_TYPE
    AND B.QUERY_USER_INFO = A.QUERY_USER_INFO

#==============================================================
# 사용자 소속별 통계.
#==============================================================
@sql.statistic.getStatUserSector
SELECT
    SUM(DECODE(A.SECTOR, '1', 1, 0)) AS SECTOR1
    , SUM(DECODE(A.SECTOR, '2', 1, 0)) AS SECTOR2
    , SUM(DECODE(A.SECTOR, '3', 1, 0)) AS SECTOR3
    , SUM(DECODE(A.SECTOR, '4', 1, 0)) AS SECTOR4
    , SUM(DECODE(A.SECTOR, '5', 1, 0)) AS SECTOR5
    , SUM(DECODE(A.SECTOR, '6', 1, 0)) AS SECTOR6
    , SUM(DECODE(A.SECTOR, NULL, 1, '', 1, 0)) AS SECTOR7
FROM RNDCALL_AUTH A
WHERE
    A.DEL_YN IS NULL
    
#==============================================================
# 분류별 통계2.
#==============================================================
@sql.statistic.getStatCategory2
SELECT
    A.CATEGORY_ID
    , A.CATEGORY_NM
    , A.ORDER_NO
    , A.CATEGORY_ID2
    , A.CATEGORY_NM2
    , A.ORDER_NO2
    , B.ONLINE_CNT
    , B.ONLINE_RND_CNT
    , B.ONLINE_TOT_CNT
    , B.OFFLINE_CNT
    , B.TOTAL_CNT
    , B.ANSWER_Y_CNT
    , B.ANSWER_RND_Y_CNT
    , B.ANSWER_N_CNT
    , B.ANSWER_RND_N_CNT
FROM (
    SELECT
        A.CATEGORY_ID
        , A.CATEGORY_NM
        , A.ORDER_NO
        , NVL(B.CATEGORY_ID, '') CATEGORY_ID2
        , B.CATEGORY_NM CATEGORY_NM2
        , B.ORDER_NO ORDER_NO2
    FROM RNDCALL_CATEGORY A
    LEFT OUTER JOIN RNDCALL_CATEGORY B
        ON B.PARENT_ID = A.CATEGORY_ID
        AND B.ISUSE = 'Y'
    WHERE
        A.PARENT_ID = -1
        AND A.ISUSE = 'Y'
    ORDER BY
        A.ORDER_NO
        , B.ORDER_NO
) A
LEFT OUTER JOIN (
    SELECT
        DECODE(A.CATEGORY1, NULL, '99999999', '', '99999999', A.CATEGORY1) CATEGORY1
        , NVL(A.CATEGORY2, '') CATEGORY2
        , SUM(DECODE(A.INSERT_TYPE, 'ONLINE', 1, 0)) ONLINE_CNT
        , SUM(DECODE(A.BOARD_TYPE, 'OFFER', 1, 0)) ONLINE_RND_CNT
        , SUM(DECODE(A.INSERT_TYPE, 'ONLINE', 1, 0)) + SUM(DECODE(A.BOARD_TYPE, 'OFFER', 1, 0)) ONLINE_TOT_CNT
        , SUM(DECODE(A.INSERT_TYPE, 'OFFLINE', 1, 0)) OFFLINE_CNT
        , COUNT(*) TOTAL_CNT
        , SUM(DECODE(A.BOARD_TYPE, 'QNA', DECODE(B.SEQ, NULL, 0, 1), 0)) ANSWER_Y_CNT
        , SUM(DECODE(A.BOARD_TYPE, 'OFFER', DECODE(B.SEQ, NULL, 0, 1), 0)) ANSWER_RND_Y_CNT
        , SUM(DECODE(A.BOARD_TYPE, 'QNA', DECODE(B.SEQ, NULL, 1, 0), 0)) ANSWER_N_CNT
        , SUM(DECODE(A.BOARD_TYPE, 'OFFER', DECODE(B.SEQ, NULL, 1, 0), 0)) ANSWER_RND_N_CNT
    FROM RNDCALL_BOARD_QUESTION A
    LEFT OUTER JOIN RNDCALL_BOARD_ANSWER B
        ON B. Q_SEQ = A.SEQ
    INNER JOIN RNDCALL_CATEGORY C
        ON C.CATEGORY_ID = DECODE(A.CATEGORY1, NULL, '99999999', '', '99999999', A.CATEGORY1)
        AND C.ISUSE = 'Y'
    INNER JOIN RNDCALL_CATEGORY D
        ON D.CATEGORY_ID = DECODE(A.CATEGORY1, NULL, '99999999', '', '99999999', A.CATEGORY1)
        AND D.ISUSE = 'Y'
    WHERE 
        A.DEL_YN ='N'
        AND A.BOARD_TYPE IN ( 'QNA', 'OFFER' )
        AND TO_CHAR(A.REG_DT, 'YYYYMM') BETWEEN ? AND ?
    GROUP BY
        A.CATEGORY1
        , A.CATEGORY2
) B
    ON B.CATEGORY1 = A.CATEGORY_ID
    AND B.CATEGORY2 = A.CATEGORY_ID2
ORDER BY
    A.ORDER_NO
    , A.ORDER_NO2